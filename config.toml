concurrent = 1
check_interval = 0

[session_server]
  session_timeout = 1800

[[runners]]
  name = "default runner"
  url = "{{ gitlab_url }}"
  id = 000
  token = "{{ token }}"
  token_obtained_at = 2022-08-29T12:26:26Z
  token_expires_at = 0001-01-01T00:00:00Z
  tls-ca-file = "/etc/gitlab-runner/certs/cert.crt"
  executor = "docker"
  environment = ["FF_GITLAB_REGISTRY_HELPER_IMAGE=0", "GIT_SSL_NO_VERIFY=1"]
  [runners.custom_build_dir]
  [runners.cache]
    [runners.cache.s3]
    [runners.cache.gcs]
    [runners.cache.azure]
  [runners.docker]
    tls_verify = true
    image = "ubuntu:latest"
    privileged = true
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = ["/cache", "/etc/ssl/certs/java/cacerts:/etc/gitlab-runner/certs/cert.crt"]
    pull_policy = ["if-not-present"]
    shm_size = 0
  [runners.machine]
    IdleCount = 0
    IdleScaleFactor = 0.0
    IdleCountMin = 0
    MachineDriver = ""
    MachineName = ""

[[runners]]
  name = "runner to build sonarqube image"
  url = "{{ gitlab_url }}"
  id = 000
  token = "{{ token }}"
  token_obtained_at = 2022-10-20T09:25:22Z
  token_expires_at = 0001-01-01T00:00:00Z
  tls-ca-file = "/etc/gitlab-runner/certs/cert.crt"
  executor = "docker"
  environment = ["GIT_SSL_NO_VERIFY=1", "DOCKER_TLS_CERTDIR="]
  [runners.custom_build_dir]
  [runners.cache]
    [runners.cache.s3]
    [runners.cache.gcs]
    [runners.cache.azure]
  [runners.docker]
    tls_verify = true
    image = "docker:19.03.0"
    privileged = false
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = ["/cache", "/var/run/docker.sock:/var/run/docker.sock"]
    shm_size = 0

[[runners]]
  name = "sonarqube"
  url = "{{ gitlab_url }}"
  id = 000
  token = "{{ token }}"
  token_obtained_at = 2022-11-07T13:58:33Z
  token_expires_at = 0001-01-01T00:00:00Z
  executor = "docker"
  environment = ["GIT_SSL_NO_VERIFY=1", "DOCKER_TLS_CERTDIR="]
  [runners.custom_build_dir]
  [runners.cache]
    [runners.cache.s3]
    [runners.cache.gcs]
    [runners.cache.azure]
  [runners.docker]
    tls_verify = true
    image = "docker:19.03.0"
    privileged = false
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = ["/cache", "/var/run/docker.sock:/var/run/docker.sock"]
    shm_size = 0

[[runners]]
  name = "runners"
  url = "{{ gitlab_url }}"
  id = 000
  token = "{{ token }}"
  token_obtained_at = 2022-11-09T09:10:02Z
  token_expires_at = 0001-01-01T00:00:00Z
  tls-ca-file = "/etc/gitlab-runner/cert.crt"
  executor = "docker"
  environment = ["FF_GITLAB_REGISTRY_HELPER_IMAGE=0", "GIT_SSL_NO_VERIFY=1"]
  [runners.custom_build_dir]
  [runners.cache]
    [runners.cache.s3]
    [runners.cache.gcs]
    [runners.cache.azure]
  [runners.docker]
    tls_verify = true
    image = "ubuntu:latest"
    privileged = true
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = ["/cache", "/etc/ssl/certs/java/cacerts:/etc/cert.crt"]
    pull_policy = ["if-not-present"]
    shm_size = 0
  [runners.machine]
    IdleCount = 0
    IdleScaleFactor = 0.0
    IdleCountMin = 0
    MachineDriver = ""
    MachineName = ""
